<?xml version="1.0" encoding="UTF-8"?>
		<!-- Licensed Materials - Property of IBM
			 5725-I43 (C) Copyright IBM Corp. 2006, 2013. All Rights Reserved.
			 US Government Users Restricted Rights - Use, duplication or
             disclosure restricted by GSA ADP Schedule Contract with IBM Corp. -->

<web-app id="WebApp_ID" xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">
	<display-name>Worklight</display-name>
	
	<!-- New oauth authorization servlet -->
	<servlet>
        <servlet-name>OAuthAuthorizationServer</servlet-name>
        <servlet-class>com.ibm.websphere.jaxrs.server.IBMRestServlet</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.worklight.authorization.endpoint.AuthorizationServerRestApplication</param-value>
        </init-param>
        <init-param> 
			<param-name>requestProcessorAttribute</param-name> 
			<param-value>auth_server</param-value> 
        </init-param> 
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>OAuthAuthorizationServer</servlet-name>
        <url-pattern>/authorization/*</url-pattern>
    </servlet-mapping>
	
	<!-- Token end-point for externalizing WL security -->
    <servlet>
        <servlet-name>AuthorizationServer</servlet-name>
        <servlet-class>com.ibm.websphere.jaxrs.server.IBMRestServlet</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>com.worklight.oauth.AuthorizationServerApplication</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>AuthorizationServer</servlet-name>
        <url-pattern>/oauth/*</url-pattern>
    </servlet-mapping>
    
    	<!-- End point for worklight push ReST APIs -->
    <servlet>
         <servlet-name>PushWorksApplication</servlet-name>
         <servlet-class>com.ibm.websphere.jaxrs.server.IBMRestServlet</servlet-class>
         <init-param>
             <param-name>javax.ws.rs.Application</param-name>
             <param-value>com.ibm.pushworks.server.rest.PushWorksApplication</param-value>
         </init-param>
         <init-param>
             <param-name>requestProcessorAttribute</param-name>
             <param-value>otherRestApplicationID</param-value>
         </init-param>
         <load-on-startup>1</load-on-startup>
     </servlet>
     <servlet-mapping>
         <servlet-name>PushWorksApplication</servlet-name>
         <url-pattern>/imfpush/v1/*</url-pattern>
     </servlet-mapping>
	
	<!-- Gadgets API -->
	<servlet>
		<servlet-name>GadgetAPIServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.GadgetAPIServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>GadgetAPIServlet</servlet-name>
		<url-pattern>/apps/services/api/*</url-pattern>
	</servlet-mapping>
	
	<!-- Application preview in the web console -->
	<servlet>
		<servlet-name>PreviewServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.PreviewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PreviewServlet</servlet-name>
		<url-pattern>/apps/services/preview/*</url-pattern>
	</servlet-mapping>
	
	<!-- Application resources access -->
	<servlet>
		<servlet-name>WebApplicationServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.WebApplicationServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WebApplicationServlet</servlet-name>
		<url-pattern>/apps/services/www/*</url-pattern>
	</servlet-mapping>
	
	<!-- Client side logging -->
	<servlet>
		<servlet-name>ClientLogUploaderServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ClientLogUploaderServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ClientLogUploaderServlet</servlet-name>
		<url-pattern>/apps/services/loguploader/*</url-pattern>
	</servlet-mapping>
	
	<!-- Client configuration profile -->
	<servlet>
		<servlet-name>ClientConfigProfileServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ClientConfigProfileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ClientConfigProfileServlet</servlet-name>
		<url-pattern>/apps/services/configprofile/*</url-pattern>
	</servlet-mapping>	
	
	<!-- Invoke back end procedure -->
	<servlet>
		<servlet-name>InvokeProcServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.InvokeProcServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>InvokeProcServlet</servlet-name>
		<url-pattern>/invoke</url-pattern>
	</servlet-mapping>
	
	<!-- REST adapters servlet -->
	<servlet>
        <servlet-name>RESTAdaptersServiceServlet</servlet-name>
        <servlet-class>com.worklight.adapters.rest.RESTAdaptersServiceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>RESTAdaptersServiceServlet</servlet-name>
        <url-pattern>/adapters/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>RESTAdaptersDOCServlet</servlet-name>
        <servlet-class>com.worklight.adapters.rest.RESTAdaptersDOCServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>RESTAdaptersDOCServlet</servlet-name>
        <url-pattern>/adapters-api-docs/*</url-pattern>
    </servlet-mapping>
    
  <!--  Random Generator- used from JSONStore-->
	<servlet>
		<servlet-name>RandomNumberGenerationServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.RandomNumberGenerationServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RandomNumberGenerationServlet</servlet-name>
		<url-pattern>/apps/services/random/*</url-pattern>
	</servlet-mapping>
	
	<!-- Push subscription api -->
	<servlet>
		<servlet-name>PushSubscriptionServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.SMSServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PushSubscriptionServlet</servlet-name>
		<url-pattern>/subscribeSMS</url-pattern>
	</servlet-mapping>
		
	<!-- SMS subscription api -->
	<servlet>
		<servlet-name>SMSSubscriptionServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.SMSServlet</servlet-class>
		<init-param>
			<param-name>requestFrom</param-name>
			<param-value>gateway</param-value>
    	</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SMSSubscriptionServlet</servlet-name>
		<url-pattern>/receiveSMS</url-pattern>
	</servlet-mapping>
	
	<!-- Direct update -->
	<servlet>
		<servlet-name>DirectUpdateServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.DirectUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DirectUpdateServlet</servlet-name>
		<url-pattern>/directUpdate/*</url-pattern>
	</servlet-mapping>
	
	<!-- USSD servlet -->
	<servlet>
		<servlet-name>USSDServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.USSDServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>USSDServlet</servlet-name>
		<url-pattern>/ussd/*</url-pattern>
	</servlet-mapping>

	<!-- Vitality api -->
	<servlet>
		<servlet-name>VitalityServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.VitalityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>VitalityServlet</servlet-name>
		<url-pattern>/ws/rest/vitality</url-pattern>
	</servlet-mapping>
	
	<!-- Reachability api -->
	<servlet>
		<servlet-name>ReachabilityServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.ReachabilityServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ReachabilityServlet</servlet-name>
		<url-pattern>/apps/services/reach</url-pattern>
	</servlet-mapping>
	
	<!-- Binary application download servlet- deprecated -->
	<servlet>
		<servlet-name>BinaryApplicationDownloadServlet</servlet-name>
		<servlet-class>com.worklight.gadgets.serving.BinaryApplicationDownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BinaryApplicationDownloadServlet</servlet-name>
		<url-pattern>/apps/services/download/*</url-pattern>
	</servlet-mapping>
	
	<!-- DEV servlets -->
	<servlet>
		<servlet-name>DevRootServlet</servlet-name>
		<servlet-class>com.worklight.server.dev.DevRootServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DevRootServlet</servlet-name>
		<url-pattern>/dev/*</url-pattern>
	</servlet-mapping>
	<!-- End of DEV servlets -->

	<listener>
		<listener-class>com.worklight.server.bundle.project.JeeProjectActivator</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.worklight.core.auth.impl.MFPRequestListener</listener-class>
	</listener>
	<filter>
		<display-name>RequestDetailLogger</display-name>
		<filter-name>RequestDetailLogger</filter-name>
		<filter-class>com.ibm.pushworks.server.rest.filter.RequestDetailLogger</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>RequestDetailLogger</filter-name>
		<url-pattern>/imfpush/v1/*</url-pattern>
	</filter-mapping>		
	<filter>
		<filter-name>OAuthServletFilter</filter-name>
		<filter-class>com.worklight.core.auth.impl.OAuthServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>OAuthServletFilter</filter-name>
		<url-pattern>/imfpush/v1/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>analyticsFilter</filter-name>
		<filter-class>com.worklight.analytics.AnalyticsFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>analyticsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>authenticationFilter</filter-name>
		<filter-class>com.worklight.core.auth.impl.AuthenticationFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authenticationFilter</filter-name>
		<url-pattern>/oauth/*</url-pattern>
		<url-pattern>/apps/services/*</url-pattern>
		<url-pattern>/invoke</url-pattern>
		<url-pattern>/subscribeSMS</url-pattern>
		<url-pattern>/receiveSMS</url-pattern>
		<url-pattern>/directUpdate/*</url-pattern>
		<url-pattern>/ussd/*</url-pattern>
		<url-pattern>/ws/rest/vitality</url-pattern>
		<url-pattern>/node/integration/*</url-pattern>
		<url-pattern>/dev/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>authorizationServerFilter</filter-name>
		<filter-class>com.worklight.authorization.server.AuthorizationServerFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authorizationServerFilter</filter-name>
		<url-pattern>/authorization/*</url-pattern>
	</filter-mapping>
	
    <mime-mapping>
        <extension>manifest</extension>
        <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
	
	<resource-ref>
      <description>Worklight Server Database</description>
      <res-ref-name>jdbc/WorklightDS</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
	</resource-ref>

	<resource-ref>
      <description>Reports Database</description>
      <res-ref-name>jdbc/WorklightReportsDS</res-ref-name>
      <res-type>javax.sql.DataSource</res-type>
      <res-auth>Container</res-auth>
	</resource-ref>

	<!-- ========================= JNDI Properties ========================= -->
	<!-- Note! All <env-entry-type> in this file are java.lang.String. -->
	<!-- Note! All <env-entry-value> in this file are empty (because of WAS Full Profile). -->
	<!-- Note! All JNDI properties that are not useful for Tomcat or WAS Liberty Profile
	     are commented out, so that they are hidden in the WAS Full Profile administration
	     console. -->

    <env-entry>
    	<description>
    		[REQUIRED] The IP address or host name of the computer running IBM Worklight.
			If the IBM Worklight Server is behind a reverse proxy, the value is the IP address or host name of the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: IP address of current server.
    	</description>
        <env-entry-name>publicWorkLightHostname</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
	    	[REQUIRED] The port for accessing the IBM Worklight Server.
			If the IBM Worklight Server is behind a reverse proxy, the value is the port for accessing the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: Same as local.httpPort.
    	</description>
        <env-entry-name>publicWorkLightPort</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[REQUIRED] The protocol for accessing the IBM Worklight Server.
			The valid values are HTTP and HTTPS. If the IBM Worklight Server is behind a reverse proxy, the value is the protocol for accessing the reverse proxy.
			This property must be identical for nodes within the same cluster.
			Default: HTTP.
    	</description>
        <env-entry-name>publicWorkLightProtocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

	<env-entry>
		<description>[OPTIONAL] Idle session timeout in minutes. Default: 10.</description>
		<env-entry-name>serverSessionTimeout</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value></env-entry-value>
	</env-entry>

    <env-entry>
    	<description>[OPTIONAL] Is reports active (true/false). Default: false.</description>
        <env-entry-name>reports.exportRawData</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] Shows whether Google GCM must be accessed through a proxy. Default is false.</description>
        <env-entry-name>push.gcm.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] GCM proxy host. Negative value means default port.</description>
        <env-entry-name>push.gcm.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] GCM proxy port. Use -1 for the default port, Default is -1.</description>
        <env-entry-name>push.gcm.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Can be either http or https.</description>
        <env-entry-name>push.gcm.proxy.protocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] Proxy user name, if the proxy requires authentication. Empty user name means no authentication.</description>
        <env-entry-name>push.gcm.proxy.user</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

 	<env-entry>
	    <description>[OPTIONAL] Proxy password, if the proxy requires authentication.</description>
        <env-entry-name>push.gcm.proxy.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Shows whether APNS must be accessed through a proxy. Default: false</description>
        <env-entry-name>push.apns.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] APNS proxy host</description>
        <env-entry-name>push.apns.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] APNS proxy port</description>
        <env-entry-name>push.apns.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] APNS Idle Connection Timeout</description>
        <env-entry-name>push.apns.connectionIdleTimeout</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
		<description>[OPTIONAL] Indicates if push sms proxy is enabled. Default: false</description>
        <env-entry-name>push.sms.proxy.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy host</description>
        <env-entry-name>push.sms.proxy.host</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy port</description>
        <env-entry-name>push.sms.proxy.port</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy protocol</description>
        <env-entry-name>push.sms.proxy.protocol</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy user</description>
        <env-entry-name>push.sms.proxy.user</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push sms proxy password</description>
        <env-entry-name>push.sms.proxy.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push APNS max connections</description>
        <env-entry-name>push.apns.connections</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push GCM max connections</description>
        <env-entry-name>push.gcm.connections</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push MPNS max connections</description>
        <env-entry-name>push.mpns.connections</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    <env-entry>
        <description>[OPTIONAL] Push WNS max connections</description>
        <env-entry-name>push.wns.connections</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
	<env-entry>
    	<description>[OPTIONAL] The path to the keystore, relative to the server folder in the Worklight Project, for example: conf/my-cert.jks</description>
        <env-entry-name>wl.ca.keystore.path</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The type of the keystore file. Valid values are jks or pkcs12.</description>
        <env-entry-name>wl.ca.keystore.type</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] The password to the keystore file.</description>
        <env-entry-name>wl.ca.keystore.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The alias of the entry where the private key and certificate are stored, in the keystore.</description>
        <env-entry-name>wl.ca.key.alias</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
        <description>[OPTIONAL] The password to the alias in the keystore.</description>
        <env-entry-name>wl.ca.key.alias.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore location.</description>
        <env-entry-name>ssl.keystore.path</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore type. Valid keystore types: jks, PKCS12. Default: jks.</description>
        <env-entry-name>ssl.keystore.type</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>

    <env-entry>
    	<description>[OPTIONAL] SSL certificate keystore password.Default: worklight.</description>
        <env-entry-name>ssl.keystore.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Indicates if the WebSphere SSL configuration is leveraged (true/false). Default: false</description>
        <env-entry-name>ssl.websphere.config</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] WebSphere SSL configuration alias name</description>
        <env-entry-name>ssl.websphere.alias</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
	
    <env-entry>
    	<description>[OPTIONAL] The list of trusted signer certificates for authenticating non-mobile (confidential) clients.</description>
        <env-entry-name>trusted.signer.certificate.paths</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value></env-entry-value>
    </env-entry>
	
	<env-entry>
		<description>[OPTIONAL] Applications and Adapters cluster data synchronization interval. Default: 2.</description>
        <env-entry-name>cluster.data.synchronization.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] Deployables folder cleanup task interval (in seconds). Default: 86400.</description>
        <env-entry-name>deployables.cleanup.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] An interval (sec) for a cleanup task that cleans the database of orphaned and expired single-sign-on login contexts. Default: 5</description>
        <env-entry-name>sso.cleanup.taskFrequencyInSeconds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that indicates whether to send messages that are logged by the 
    		IBM Worklight Server to the IWAP server. If this value is true, all logs that are specified in 
    		com.worklight settings are forwarded to the IWAP server. The default value is true. 
    		This setting is only supported on IBM Worklight production servers. It s not supported on the 
    		IBM Worklight Studio development environment. 
    	</description>
        <env-entry-name>wl.analytics.logs.forward</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] The URL that is exposed by the IBM Worklight Analytics Platform that receives incoming analytics data. 
    	</description>
        <env-entry-name>wl.analytics.url</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The URL that is exposed by the IBM MobileFirst Platform Operational Analytics that links to the Analytics console. 
    	</description>
        <env-entry-name>wl.analytics.console.url</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] The basic authorized user name for the URL entered in wl.analytics.url.</description>
        <env-entry-name>wl.analytics.username</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>[OPTIONAL] The basic authorized password for the URL entered in wl.analytics.url.</description>
        <env-entry-name>wl.analytics.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    	[OPTIONAL] Sets the name of the IBM Worklight adapter that is the designated receiver of uploaded
    	client log data.  In order to receive uploaded client log data in an adapter, you must deploy an
    	adapter named the same as the value of this property.  Default: "WLClientLogReceiver".
    	</description>
        <env-entry-name>wl.clientlogs.adapter.name</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that will enable the access management
    		features on the worklight server. If the access management features have been 
    		enabled, each time a device attempts to connect to the server, it will be checked
    		against the backend for its access rights.
    	</description>
        <env-entry-name>wl.device.enableAccessManagement</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] A Boolean value (true or false) that will enable / disable the device
    		tracking features on the worklight server. If the device tracking features have been 
    		enabled, every device connecting to the server is tracked and the device can be 
    		managed and the license reports generated will include the tracked devices in the  
    		report. Default: true 
    	</description>
        <env-entry-name>wl.device.tracking.enabled</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
   
    <env-entry>
    	<description>
    	    [OPTIONAL] The number of days of inactivity before a device is available for 
    	    decommissioning. Default: 90
    	</description>
        <env-entry-name>wl.device.decommission.when</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>
    
    <env-entry>
    	<description>
    		[OPTIONAL] The number of days after which a decommissioned device can be archived by 
    		Worklight Server. Default: 90
    	</description>
        <env-entry-name>wl.device.archiveDecommissioned.when</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] Turns session dependency in MobileFirst Server on or off.
    	</description>
        <env-entry-name>mfp.session.independent</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The storage type for the authorization server's attribute store.
    		Valid values are: HttpSession, database, eXtremeScale, dataCache (case insensitive).
    	</description>
        <env-entry-name>mfp.attrStore.type</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The attribute store database cleanup task interval (in minutes). 
    		The default is 60 minutes
    	</description>
        <env-entry-name>mfp.attrStore.db.cleanupFrequency.minutes</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The interval (in days) after which an expired attribute 
    		is considered stale, and may be deleted by the attribute store database
    		cleanup task. The default is 30 days.
    	</description>
        <env-entry-name>mfp.attrStore.db.stalePeriod.days</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Properties related to eXtreme Scale configuration. -->

    <env-entry>
    	<description>
    		[OPTIONAL] A comma separated list of host/port pairs of the WebSphere eXtreme Scale 
    		catalog servers, in the form "host:port"
    	</description>
        <env-entry-name>mfp.attrStore.xs.endpoint</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The user name for connecting to WebSphere eXtreme Scale."
    	</description>
        <env-entry-name>mfp.attrStore.xs.username</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The password for connecting to WebSphere eXtreme Scale."
    	</description>
        <env-entry-name>mfp.attrStore.xs.password</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The WebSphere eXtreme Scale grid used for caching the attribute store."
    	</description>
        <env-entry-name>mfp.attrStore.xs.gridname</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

    <env-entry>
    	<description>
    		[OPTIONAL] The WebSphere eXtreme Scale backing map used for caching the attribute store."
    	</description>
        <env-entry-name>mfp.attrStore.xs.mapname</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value/>
    </env-entry>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JNDI Properties that reflect the topology of machines and application servers. -->

	<env-entry>
		<description>
			[OPTIONAL] Environment identifier. Used to distinguish different
			instances of Worklight Server that are installed on the same
			application server or in the same WAS ND cell. Set this property
			to the same value as on the corresponding Worklight Administration
			Services web application.
		</description>
		<env-entry-name>ibm.worklight.admin.environmentid</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] Servers topology.
			Possible values: Standalone, Cluster, Farm.
			Default: Standalone.
		</description>
		<env-entry-name>ibm.worklight.topology.clustermode</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[MANDATORY] [Farm of servers only] Server identifier.
			Must be different for each server in the farm.
		</description>
		<env-entry-name>ibm.worklight.admin.serverid</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value></env-entry-value>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] Server type.
			Possible values: Liberty, WAS, Tomcat.
			Default: Guessed by the code.
		</description>
		<env-entry-name>ibm.worklight.topology.platform</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JNDI Properties that determine the JMX transport. -->

	<!-- JNDI Properties that determine the JMX transport in WAS Full Profile. -->

	<env-entry>
		<description>
			[OPTIONAL] [WAS Full Profile only] JMX Connector type.
			Possible values: SOAP, RMI.
			Default: SOAP.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.connector</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[MANDATORY] [WAS ND only] Deployment Manager host name.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.dmgr.host</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	<env-entry>
		<description>
			[MANDATORY] [WAS ND only] Deployment Manager SOAP or RMI port
			(which one, depends on the value of ibm.worklight.admin.jmx.connector).
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.dmgr.port</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	<env-entry>
		<description>
			[MANDATORY] [Liberty Profile] User name for the JMX REST connection.
			[MANDATORY] [WAS Farm] User name for the SOAP connection.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.user</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value></env-entry-value>
	</env-entry>
	<env-entry>
		<description>
			[MANDATORY] [Liberty Profile] User password for the JMX REST connection.
			[MANDATORY] [WAS Farm] User password for the SOAP connection.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.pwd</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value></env-entry-value>
	</env-entry>

	<!-- JNDI Properties that determine the JMX transport in Liberty Profile. -->

	<!-- Not used in WAS Full Profile.
	<env-entry>
		<description>
			[OPTIONAL] [Liberty Profile only] Hostname for the JMX REST connection.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.host</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	<env-entry>
		<description>
			[OPTIONAL] [Liberty Profile only] Port for the JMX REST connection.
		</description>
		<env-entry-name>ibm.worklight.admin.jmx.port</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	-->

	<!-- JNDI Properties that determine the JMX transport in Tomcat. -->

	<!-- Not used in WAS Full Profile.
	<env-entry>
		<description>
			[OPTIONAL] [Tomcat only] RMI registry port for the JMX connection through a firewall.
		</description>
		<env-entry-name>ibm.worklight.admin.rmi.registryPort</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	<env-entry>
		<description>
			[OPTIONAL] [Tomcat only] RMI server port for the JMX connection through a firewall.
		</description>
		<env-entry-name>ibm.worklight.admin.rmi.serverPort</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	-->

	<!-- ++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JNDI Properties for JNDI configurations. -->

	<env-entry>
		<description>
			[OPTIONAL] The name of the JNDI configuration if the JNDI properties (except this one) should be read from a property file injected into the WAR file.
		</description>
		<env-entry-name>ibm.worklight.jndi.configuration</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] The name of the file containing the JNDI configuration if the JNDI properties (except this one) should be read from a file installed in the web server.
		</description>
		<env-entry-name>ibm.worklight.jndi.file</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- JNDI Properties for Cloudant configuration -->

	<env-entry>
		<description>
			[OPTIONAL] The Cloudant account username. When this property is defined along with Cloudant password, the runtime DB will be Cloudant, otherwise the configured JPA.
		</description>
		<env-entry-name>mfp.db.cloudant.username</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] The Cloudant account password. When this property is defined along with Cloudant username, the runtime DB will be Cloudant, otherwise the configured JPA.
		</description>
		<env-entry-name>mfp.db.cloudant.password</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] The Cloudant account URL. When this property is defined, the Cloudant DB will be directed to this URL, otherwise to the default https://Cloudant.com
		</description>
		<env-entry-name>mfp.db.cloudant.url</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] The Cloudant DB prefix. when this property is configured, the default DB name "[project_name]_runtime_db" will be prefixed by this prefix. Prefix string must contain lower case letters only.
		</description>
		<env-entry-name>mfp.db.cloudant.dbNamePrefix</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] A timeout for establishing a network connection for Cloudant, in milliseconds. A value of zero means an infinite timeout. A negative value means the default (no override). In case not configured a default value (described at https://github.com/cloudant/java-cloudant#advanced-configuration) is used.
		</description>
		<env-entry-name>mfp.db.cloudant.connectTimeout</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] A timeout for detecting the loss of a network connection for Cloudant, in milliseconds. A value of zero means an infinite timeout. A negative value means the default (no override). In case not configured a default value (described at https://github.com/cloudant/java-cloudant#advanced-configuration) is used.
		</description>
		<env-entry-name>mfp.db.cloudant.socketTimeout</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] The Cloudant connector's max connections. In case not configured a default value (described at https://github.com/cloudant/java-cloudant#advanced-configuration) is used.
		</description>
		<env-entry-name>mfp.db.cloudant.maxConnections</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] A Boolean value (true or false) that specifies whether the SSL certificate chain validation and host name verification are enabled for HTTPS connections to the Cloudant database.
			The default value is true.
			Note: Setting this property to false creates security risks.
		</description>
		<env-entry-name>mfp.db.cloudant.ssl.authentication</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] [WAS Full Profile only] For HTTPS connections to the Cloudant database: The name of an SSL configuration in the WebSphere Application Server configuration, to use when no configuration is specified for the host and port.
		</description>
		<env-entry-name>mfp.db.cloudant.ssl.configuration</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] Cloudant connector's proxy host. In case not configured a default value (described at https://github.com/cloudant/java-cloudant#advanced-configuration) is used.
		</description>
		<env-entry-name>mfp.db.cloudant.proxyHost</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

	<env-entry>
		<description>
			[OPTIONAL] Cloudant connector's proxy port. In case not configured a default value (described at https://github.com/cloudant/java-cloudant#advanced-configuration) is used.
		</description>
		<env-entry-name>mfp.db.cloudant.proxyPort</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value/>
	</env-entry>

</web-app>
