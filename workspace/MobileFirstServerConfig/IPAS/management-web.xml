<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed Materials - Property of IBM
    5725-I43 (C) Copyright IBM Corp. 2006, 2014. All Rights Reserved.
    US Government Users Restricted Rights - Use, duplication or
    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>Worklight Administration Services</display-name>

  <servlet>
    <servlet-name>ManagementServlet</servlet-name>
    <servlet-class>com.ibm.worklight.admin.services.RestServlet</servlet-class>
    <init-param>
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>com.ibm.worklight.admin.services.ManagementServiceServlet</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>ManagementServlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring-management-service.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>com.ibm.worklight.admin.listeners.WorklightManagementServletContextListener</listener-class>
  </listener>

  <!-- Declaring access to the mobile management database  -->
  <resource-ref>
    <res-ref-name>jdbc/WorklightAdminDS</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
    <res-sharing-scope>Shareable</res-sharing-scope>
  </resource-ref>

  <!-- SECURITY ROLES -->

  <security-role>
    <role-name>worklightadmin</role-name>
  </security-role>
  <security-role>
    <role-name>worklightdeployer</role-name>
  </security-role>
  <security-role>
    <role-name>worklightmonitor</role-name>
  </security-role>
  <security-role>
    <role-name>worklightoperator</role-name>
  </security-role>

  <!-- SECURITY CONSTRAINTS -->
  <!-- Documentation:
       http://docs.oracle.com/javaee/5/tutorial/doc/bncbe.html#bncbj
       http://docs.oracle.com/javaee/6/tutorial/doc/gkbaa.html#bncbk -->

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>allAccess</web-resource-name>
      <url-pattern>/management-apis/*</url-pattern>
      <url-pattern>/userAndConfigInfo</url-pattern>
      <http-method>GET</http-method>
      <http-method>HEAD</http-method>
      <http-method>POST</http-method>
      <http-method>PUT</http-method>
      <http-method>DELETE</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>worklightadmin</role-name>
      <role-name>worklightmonitor</role-name>
      <role-name>worklightoperator</role-name>
      <role-name>worklightdeployer</role-name>
    </auth-constraint>
    <user-data-constraint>
      <transport-guarantee>NONE</transport-guarantee>
    </user-data-constraint>
  </security-constraint>

  <!-- AUTHENTICATION METHOD: Basic authentication -->
  <!-- Documentation: http://docs.oracle.com/javaee/5/tutorial/doc/bncbe.html#bncbo -->
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>worklightRealm</realm-name>
  </login-config>

  <filter>
    <display-name>HTTP Strict Transport Security filter</display-name>
    <filter-name>HSTSFilter</filter-name>
    <filter-class>com.ibm.worklight.admin.common.filter.HSTSFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>HSTSFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>RestFilter</display-name>
    <filter-name>RestFilter</filter-name>
    <filter-class>com.ibm.worklight.admin.services.RestFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>RestFilter</filter-name>
    <url-pattern>/management-apis/*</url-pattern>
  </filter-mapping>

  <!-- ========================= JNDI Properties ========================= -->
  <!-- Note! All <env-entry-type> in this file are java.lang.String. -->
  <!-- Note! All <env-entry-value> in this file are empty (because of WAS Full Profile). -->
  <!-- Note! All JNDI properties that are not useful for Tomcat or WAS Liberty Profile
       are commented out, so that they are hidden in the WAS Full Profile administration
       console. -->

  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties that reflect the topology of machines and application servers. -->

  <env-entry>
    <description>
			[OPTIONAL] Environment identifier. Used to distinguish different
			instances of Worklight Server that are installed on the same
			application server or in the same WAS ND cell.
    </description>
    <env-entry-name>ibm.worklight.admin.environmentid</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Server type.
			Possible values: Liberty, WAS, Tomcat.
			Default: Guessed by the code.
    </description>
    <env-entry-name>ibm.worklight.topology.platform</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  

  <env-entry>
    <description>
			[OPTIONAL] Servers topology.
			Possible values: Standalone, Cluster, Farm.
			Default: Standalone.
    </description>
    <env-entry-name>ibm.worklight.topology.clustermode</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[MANDATORY] [Farm of servers only] Server identifier.
			Must be different for each server in the farm.
    </description>
    <env-entry-name>ibm.worklight.admin.serverid</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Farm of servers only] Heart beat rate of farm members, expressed in minutes.
		    This value must be identical on every member of the farm.
			Default: 2
    </description>
    <env-entry-name>ibm.worklight.admin.farm.heartbeat</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Farm of servers only] The minimum number of missed heart beat(s) before marking a farm node as unavailable. 
			This value must be equal or greater than 1.
		    This value must be identical on every member of the farm.
			Default: 2.
    </description>
    <env-entry-name>ibm.worklight.farm.missed.heartbeats.timeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  
  <env-entry>
    <description>
			[OPTIONAL] Whether the Worklight Administration server handles the locking during synchronization.
			This is only needed in cluster or farm topology when the data base is Cloudant.
			If not set to automatic, exactly one server in the farm must have the value true while all other servers have the value false. 
			Possible values: true, false, automatic.
			Default: automatic.
    </description>
    <env-entry-name>ibm.worklight.admin.lock.master</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Time to wait on startup until Cloudant is ready, in milliseconds, before any locking operation can be done.
			This is only needed in cluster or farm topology when the data base is Cloudant.
	        In a farm or cluster, one of the nodes handles all locking operations during synchronization.
            If the property "ibm.worklight.admin.lock.master" is not set, or
            set to "automatic", the data base is used to decide which node handles the locking operations.
            This requires a small delay, similar to mfp.db.cloudant.afterWrite.delay, to ensure that the Cloudant data base is in a consistent state.
            This delay happens only one time when the node starts.
	        Negative values are ignored.
			Default: 3000 (3 seconds).
    </description>
    <env-entry-name>ibm.worklight.admin.lock.master.detection.delay</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Timeout for the detection of the lock master in seconds. 
			This is only needed in cluster or farm topology when the data base is Cloudant.
	        In a farm or cluster, one of the nodes handles all locking operations during synchronization and must become alive first during startup.
            This timeout value specifies the maximal time another node waits for this master node to become alive. 
	        Negative values are ignored.
			Default: 120 (2 minutes).
    </description>
    <env-entry-name>ibm.worklight.admin.lock.master.detection.timeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Timeout for the connection to the lock master in seconds.
			This is only needed in cluster or farm topology when the data base is Cloudant.
	        In a farm or cluster, one of the nodes handles all locking operations during synchronization.
            This timeout value specifies the maximal time another node waits for this master node to respond on requests to take a lock. 
	        Negative values are ignored.
			Default: 10 (seconds).
    </description>
    <env-entry-name>ibm.worklight.admin.lock.master.connect.timeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>


  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties that identify a firewall or reverse proxy. -->

  <env-entry>
    <description>
			[OPTIONAL] If the Worklight Administration server is behind a
			firewall or reverse proxy, this property specifies its host name.
    </description>
    <env-entry-name>ibm.worklight.admin.proxy.host</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] If the Worklight Administration server is behind a
			firewall or reverse proxy, this property specifies the port
			of this proxy.
    </description>
    <env-entry-name>ibm.worklight.admin.proxy.port</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] If the Worklight Administration server is behind a
			firewall or reverse proxy, this property specifies the protocol
			of this proxy (http or https).
    </description>
    <env-entry-name>ibm.worklight.admin.proxy.protocol</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] This property is just an alternative name for
			ibm.worklight.admin.proxy.protocol.
    </description>
    <env-entry-name>ibm.worklight.admin.proxy.scheme</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties that determine the JMX transport. -->

  <!-- JNDI Properties that determine the JMX transport in WAS Full Profile. -->

  <env-entry>
    <description>
			[OPTIONAL] [WAS Full Profile only] JMX Connector type.
			Possible values: SOAP, RMI.
			Only SOAP is supported in the context of a server farm.
			Default: SOAP.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.connector</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[MANDATORY] [WAS ND only] Deployment Manager host name.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.dmgr.host</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  <env-entry>
    <description>
			[MANDATORY] [WAS ND only] Deployment Manager SOAP or RMI port
			(which one, depends on the value of ibm.worklight.admin.jmx.connector).
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.dmgr.port</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  <env-entry>
    <description>
			[MANDATORY] [Liberty Profile] User name for the JMX REST connection.
			[MANDATORY] [WAS Farm] User name for the SOAP connection.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.user</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  <env-entry>
    <description>
			[MANDATORY] [Liberty Profile] User password for the JMX REST connection.
			[MANDATORY] [WAS Farm] User password for the SOAP connection.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.pwd</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- JNDI Properties that determine the JMX transport in Liberty Profile. -->

  <!-- Not used in WAS Full Profile.
  <env-entry>
    <description>
			[OPTIONAL] [Liberty Profile only] Hostname for the JMX REST connection.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.host</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  <env-entry>
    <description>
			[OPTIONAL] [Liberty Profile only] Port for the JMX REST connection.
    </description>
    <env-entry-name>ibm.worklight.admin.jmx.port</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  -->

  <!-- JNDI Properties that determine the JMX transport in Tomcat. -->

  <!-- Not used in WAS Full Profile.
  <env-entry>
    <description>
			[OPTIONAL] [Tomcat only] RMI registry port for the JMX connection through a firewall.
    </description>
    <env-entry-name>ibm.worklight.admin.rmi.registryPort</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  <env-entry>
    <description>
			[OPTIONAL] [Tomcat only] RMI server port for the JMX connection through a firewall.
    </description>
    <env-entry-name>ibm.worklight.admin.rmi.serverPort</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  -->

  <!-- +++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for Security. -->

  <env-entry>
    <description>
			[OPTIONAL] Set to true to enable HTTP Strict Transport Security.
			Default: false.
    </description>
    <env-entry-name>ibm.worklight.admin.hsts</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Set to false to disable the audit feature.
			Default: true.
    </description>
    <env-entry-name>ibm.worklight.admin.audit</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- +++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for Timeouts. -->

  <env-entry>
    <description>
			[OPTIONAL] Timeout in milliseconds for the first phase (prepare) of
			a deployment transaction.
			Default: 1800000 (30 min).
    </description>
    <env-entry-name>ibm.worklight.admin.actions.prepareTimeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Timeout in milliseconds for the second phase (commit or
			reject) of a deployment transaction.
			Default: 120000 (2 min).
    </description>
    <env-entry-name>ibm.worklight.admin.actions.commitRejectTimeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Timeout in milliseconds for obtaining the transaction lock.
			Default: 1200000 (20 min).
    </description>
    <env-entry-name>ibm.worklight.admin.lockTimeoutInMillis</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] The maximum time during which a process can hold the
			transaction lock.
			Default: 1800000 (30 min).
    </description>
    <env-entry-name>ibm.worklight.admin.maxLockTimeInMillis</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- +++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for Debugging the Server. -->

  <env-entry>
    <description>
			[OPTIONAL] Set to true to enable pretty formatting (extra whitespace)
			of JSON objects in responses and log messages.
    </description>
    <env-entry-name>ibm.worklight.admin.logging.formatjson</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Set to true to log details about the request processing
			to the server's System.err stream. Useful to debug this web application.
			Default: false.
    </description>
    <env-entry-name>ibm.worklight.admin.logging.tosystemerror</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- ++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for the Database Connection. -->

  <env-entry>
    <description>
			[OPTIONAL] The JNDI name of the data source.
			Default: java:comp/env/jdbc/WorklightAdminDS.
    </description>
    <env-entry-name>ibm.worklight.admin.db.jndi.name</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Only when the data source specified by the ibm.worklight.admin.db.jndi.name property does not exist]
			The JDBC driver class name.
    </description>
    <env-entry-name>ibm.worklight.admin.db.openjpa.ConnectionDriverName</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Only when the data source specified by the ibm.worklight.admin.db.jndi.name property does not exist]
			The JDBC connection URL.
    </description>
    <env-entry-name>ibm.worklight.admin.db.openjpa.ConnectionURL</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Only when the data source specified by the ibm.worklight.admin.db.jndi.name property does not exist]
			The user name for the JDBC connection.
    </description>
    <env-entry-name>ibm.worklight.admin.db.openjpa.ConnectionUserName</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Only when the data source specified by the ibm.worklight.admin.db.jndi.name property does not exist]
			The password for the JDBC connection.
    </description>
    <env-entry-name>ibm.worklight.admin.db.openjpa.ConnectionPassword</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] Enables JPA logging. Interpreted by OpenJPA.
    </description>
    <env-entry-name>ibm.worklight.admin.db.openjpa.Log</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] [Only when the data source specified by the ibm.worklight.admin.db.jndi.name property does not exist]
			The database type.
			Default: Inferred from the database URL.
    </description>
    <env-entry-name>ibm.worklight.admin.db.type</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for the Cloudant Database Connection. -->

  <env-entry>
    <description>
      [OPTIONAL] The URL of the Cloudant account, used to store the database.
                 Default: https://[username].cloudant.com
    </description>
    <env-entry-name>mfp.db.cloudant.url</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The user name of the Cloudant account, used to store the database.
                 If this property is not defined, a relational database is used.
    </description>
    <env-entry-name>mfp.db.cloudant.username</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The password of the Cloudant account, used to store the database.
                 This property must be set when mfp.db.cloudant.username is set.
    </description>
    <env-entry-name>mfp.db.cloudant.password</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The URL of the Cloudant dashboard. A link will be displayed on the MobileFirst Operations Console.
    </description>
    <env-entry-name>ibm.worklight.admin.cloudant.dashboard.url</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] A Boolean value (true or false) that specifies whether the SSL certificate chain validation and host name verification are enabled for HTTPS connections to the Cloudant database.
      The default value is true.
      Note: Setting this property to false creates security risks.
    </description>
    <env-entry-name>mfp.db.cloudant.ssl.authentication</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] [WAS Full Profile only] For HTTPS connections to the Cloudant database: The name of an SSL configuration in the WebSphere Application Server configuration, to use when no configuration is specified for the host and port.
    </description>
    <env-entry-name>mfp.db.cloudant.ssl.configuration</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] Host name of an HTTP proxy for the connection to the Cloudant database server.
    </description>
    <env-entry-name>mfp.db.cloudant.proxyHost</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] Port of an HTTP proxy for the connection to the Cloudant database server.
    </description>
    <env-entry-name>mfp.db.cloudant.proxyPort</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The name of the database for the MobileFirst Administration Services in the Cloudant account.
                 It must start with a lowercase letter and consist only of lowercase letters, digits, and the characters _, $, and -.
                 Default: mfp_admin_db.
    </description>
    <env-entry-name>mfp.db.cloudant.adminDbName</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The timeout for establishing a network connection for Cloudant, in milliseconds.
                 A value of zero means an infinite timeout.
                 A negative value means the default (no override).
    </description>
    <env-entry-name>mfp.db.cloudant.connectTimeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The timeout for detecting the loss of a network connection for Cloudant, in milliseconds.
                 A value of zero means an infinite timeout.
                 A negative value means the default (no override).
    </description>
    <env-entry-name>mfp.db.cloudant.socketTimeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The maximum number of simultaneous connections to the Cloudant database.
    </description>
    <env-entry-name>mfp.db.cloudant.maxConnections</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] Specifies whether an "ensure full commit" operation is used after every write to the Cloudant database.
                 Possible values: true, false.
                 Default: false.
    </description>
    <env-entry-name>mfp.db.cloudant.afterWrite.fullCommit</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] How long to wait after every write to the Cloudant database, in milliseconds.
                 A value of 0 means no wait.
                 Default: 0
    </description>
    <env-entry-name>mfp.db.cloudant.afterWrite.delay</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The number of times to retry a Cloudant database query operation until it satisfies the expectations known from the context.
                 Default: 2
    </description>
    <env-entry-name>mfp.db.cloudant.retry.count</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] How long to wait before retrying a Cloudant database query operation, in milliseconds.
                 A value of 0 means no wait.
                 Default: 0
    </description>
    <env-entry-name>mfp.db.cloudant.retry.delay</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The timeout for the completion of operations on Cloudant documents, in seconds.
                 A value of zero means an infinite timeout.
                 A negative value means the default (no override).
                 Default: 30 sec.
    </description>
    <env-entry-name>mfp.db.cloudant.documentOperation.timeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <env-entry>
    <description>
      [OPTIONAL] The timeout for the completion of operations on Cloudant attachments, in seconds.
                 A value of zero means an infinite timeout.
                 A negative value means the default (no override).
                 Default: 600 sec. (10 minutes)
    </description>
    <env-entry-name>mfp.db.cloudant.attachmentOperation.timeout</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value/>
  </env-entry>

  <!-- ++++++++++++++++++++++++++++++++++++++++ -->
  <!-- JNDI Properties for JNDI configurations. -->

  <env-entry>
    <description>
			[OPTIONAL] The name of the JNDI configuration if the JNDI properties (except this one) should be read from a property file injected into the WAR file.
    </description>
    <env-entry-name>ibm.worklight.jndi.configuration</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>

  <env-entry>
    <description>
			[OPTIONAL] The name of the file containing the JNDI configuration if the JNDI properties (except this one) should be read from a file installed in the web server.
    </description>
    <env-entry-name>ibm.worklight.jndi.file</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  
  <env-entry>
    <description>
			[OPTIONAL] The host name of the rational license key server.
    </description>
    <env-entry-name>ibm.worklight.admin.license.key.server.host</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  
  <env-entry>
    <description>
			[OPTIONAL] The port number of the rational license key server.
    </description>
    <env-entry-name>ibm.worklight.admin.license.key.server.port</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value></env-entry-value>
  </env-entry>
  
</web-app>
